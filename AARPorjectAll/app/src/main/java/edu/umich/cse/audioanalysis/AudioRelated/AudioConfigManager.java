package edu.umich.cse.audioanalysis.AudioRelated;

import android.util.Log;

import java.util.ArrayList;
import java.util.List;

import edu.umich.cse.audioanalysis.C;

/*
 * 2015/09/03: classs manage audio source, include the source past by matlab code
 * 2015/09/03: make every thing as static, init at begining of app
 * */
public class AudioConfigManager {
	
	public static List<AudioConfig> audioConfigs;
	
	// *** start for high frequency setting used in Mobicom ***
	public static final String inputConfigChirpResponse = "48000rate-1repeat-480000period+chirp-5Hz-24000Hz-480000samples+pilotchirp";
	public static final String inputConfigChirpSync = "48000rate-30repeat-24000period+chirp-10000Hz-22000Hz-1200samples+pilotchirp";


	// *** at end of high frequency setting used in Mobicom ***
	
	// *** start for high frequency setting used in test of single trace training ***
	//public static final String inputConfigChirpResponse = "16repeat-4096period+sweep-4cycle-10lo-15ro-10000Hz-22000Hz-100samples+hamming+pilot+stereo_4cycle_1offset";
	//public static final String inputConfigPredict = "16repeat-4096period+sweep-4cycle-10lo-15ro-10000Hz-22000Hz-100samples+hamming+pilot+stereo_4cycle_1offset";
	// *** at end of high frequency setting used in test ***
	
	// *** start for mid frequency setting used for testing larger tolerance range ***
	/*
	public static final String inputConfigChirpResponse = "16repeat-4096period+sweep-4cycle-10lo-15ro-1000Hz-9000Hz-100samples+hamming+pilot+stereo_4cycle_1offset";
	public static final String inputConfigPredict = "16repeat-4096period+sweep-4cycle-10lo-15ro-1000Hz-9000Hz-100samples+hamming+pilot+stereo_4cycle_1offset";
	*/
	// *** start for mid frequency setting used for testing larger tolerance range ***
	
	
	public static void init() {
		// 1. general initialization
		audioConfigs = new ArrayList<AudioConfig>();
		AudioConfig ac;

		// *** NOTE: many sound files have bee moved in to the back up folder to reduce the size of app ***

		/*
		// 2. THIS PART SHOULD BE GENERATED BY MATLAB
		// start of setting
		ac = new AudioConfig("48000rate-1repeat-480000period+chirp-5Hz-24000Hz-480000samples+pilotchirp");
		audioConfigs.add(ac);
		

		// Arun's chirp setting
		// result: get three peaks, hard to tell which one is real, also the reflection affect the following peaks
		ac = new AudioConfig("48000rate-50repeat-2400period+chirp-2000Hz-6000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// My new setting to ensure only one peak, and extend the duration to FS*0.1 samples
		ac = new AudioConfig("48000rate-50repeat-4800period+chirp-2000Hz-22000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// Device chirp test setting for BumpFree
		// wide-band
		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-1000Hz-22000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// mid-band
		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-10000Hz-22000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// narrow-band
		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-18000Hz-22000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// ultra-band
		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-20000Hz-24000Hz-1200samples+pilotchirp");
		audioConfigs.add(ac);

		// beep-high
		ac = new AudioConfig("48000rate-50repeat-4800period+chirp-20000Hz-20000Hz-30samples+pilotchirp");
		audioConfigs.add(ac);

		// beep-mid
		ac = new AudioConfig("48000rate-50repeat-4800period+chirp-12000Hz-12000Hz-30samples+pilotchirp");
		audioConfigs.add(ac);

		// hamming window (customized)
		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-18000Hz-24000Hz-1200samples+customhamming+pilotchirp");
		audioConfigs.add(ac);

		// hamming window (cutomized) + shortperiod
		ac = new AudioConfig("48000rate-50repeat-4800period+chirp-18000Hz-24000Hz-1200samples+chwin600+pilotchirp");
		audioConfigs.add(ac);

		// hamming window (customized) + 10hz sweep rate + repeated(accurate) pilot setting
		ac = new AudioConfig("48000rate-50repeat-4800period+chirp-18000Hz-24000Hz-1200samples+chwin600+pilotchirprepeat");
		audioConfigs.add(ac);
		*/


		// hamming window (customized) + 20hz sweep rate + repeated(accurate) pilot setting + longer singal (4min)
		// NOTE: name is reduced since Android doesn't allow name be larger than 100
		ac = new AudioConfig("48000rate-5000repeat-2400period+chirp-18000Hz-24000Hz-1200samples+namereduced");
		audioConfigs.add(ac);

		ac = new AudioConfig("48000rate-30repeat-24000period+chirp-18000Hz-24000Hz-1200samples+customhamming+pilotchirp.wav");
		audioConfigs.add(ac);

		// vibration measurement sound
		/*
		ac = new AudioConfig("48000rate-5000repeat-1200period+chirp-18000Hz-24000Hz-1200samples+namereduced");
		audioConfigs.add(ac);

		ac = new AudioConfig("48000rate-1repeat-6000000period+chirp-12000Hz-12000Hz-6000000samples+pilotchirprepeat");
		audioConfigs.add(ac);

		ac = new AudioConfig("48000rate-1repeat-6000000period+chirp-20000Hz-20000Hz-6000000samples+pilotchirprepeat");
		audioConfigs.add(ac);
		*/
	}
	
	public static int findAudioConfig(String sourceName){
		for(int i=0;i<audioConfigs.size();i++){
			if(audioConfigs.get(i).sourceName.equals(sourceName)){
				return i;
			}
		}
		
		// source no found
		Log.e(C.LOG_TAG, "[ERROR]: audio config is not found in AudioManager. Please copy it form matlab output folder");
		return -1;
	}
	
	
}
